name: Docker

on:
  pull_request:
    branches: [master]
  push:
    branches: [master, stable]
    # Publish vX.X.X tags as releases.
    tags: ["v*.*.*"]

permissions:
  contents: read
  packages: write

jobs:
  build-n-push:
    name: Build and Push
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get Version
        shell: bash
        run: echo "BUILD_VERSION=${GITHUB_REF_NAME}-${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            wgportal/wg-portal
            ghcr.io/${{ github.repository }}
          flavor: |
            latest=auto
            prefix=
            suffix=
          tags: |
            type=ref,event=tag
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          build-args: |
            BUILD_VERSION=${{ env.BUILD_VERSION }}

      - name: Export binaries from images
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          target: binaries
          outputs: type=local,dest=./binaries
          build-args: |
            BUILD_VERSION=${{ env.BUILD_VERSION }}

      - name: Rename binaries
        run: |
          for file in binaries/linux*/wg-portal; do
            mv $file binaries/wg-portal_$(basename $(dirname $file))
          done

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: binaries/wg-portal_linux*
          retention-days: 10

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: build-n-push
    permissions:
      contents: write
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: binaries

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: 'wg-portal_linux*'
          generate_release_notes: true
